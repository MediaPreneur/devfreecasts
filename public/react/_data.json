{
  "index": {
    "subtitle": "React",
    "about": "A JavaScript library for building User Interfaces. Lots of people use React as the V in MVC. Since React makes no assumptions about the rest of your technology stack, it's easy to try it out on a small feature in an existing project.",
    "site": "http://facebook.github.io/react",
    "image": "react.jpg",
    "partners": [
      {
        "site" : "TagTree",
        "site_url": "http://tagtree.tv",
        "image": "tagtree.jpg",
        "lang": "en",
        "publish": true,
        "videos": [
          {
            "title": "Thinking in React",
            "description": "We build a sample app in the Facebook view library, following along with their 'Thinking in React' guide.",
            "duration": "15:15",
            "url": "http://tagtree.tv/thinking-in-react"
          }
        ]
      },
      {
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en",
        "publish": true,
        "videos": [
          {
            "title": "Flux Components/Views",
            "description": "In Flux our Components are referred to as Views, but they are the same familiar Components associated with any React development.",
            "duration": "9:22",
            "url": "https://egghead.io/lessons/react-flux-components-views"
          },
          {
            "title": "Flux Stores",
            "description": "Stores are where the real work in our application is done. Dispatchers broadcast Actions to all Stores, and the Stores registered to listen for those Actions will perform any logic needed to update our Views.",
            "duration": "5:53",
            "url": "https://egghead.io/lessons/react-flux-stores"
          },
          {
            "title": "Flux Actions",
            "description": "Actions contain no functionality, but rather describe an event in our application. In this lesson we will describe our Actions as they relate to our application. These Actions will then be available for triggering in our Views and for execution in our Store.",
            "duration": "3:41",
            "url": "https://egghead.io/lessons/react-actions"
          },
          {
            "title": "Flux Overview and Dispatchers",
            "description": "In this lesson we will start by creating our Dispatcher which queues up our Actions as Promises and executes them as they are received.",
            "duration": "5:48",
            "url": "https://egghead.io/lessons/react-flux-overview-and-dispatchers"
          },
          {
            "title": "Flux Development Environment Setup",
            "description": "Our build process during this series will utilize both gulp and browserify. In this lesson we will take a moment to setup our environment and all of the tooling required to begin developing our Flux Application.",
            "duration": "6:39",
            "url": "https://egghead.io/lessons/react-development-environment-setup"
          },
          {
            "title": "Developer Tools",
            "description": "React Development Tools is a Chrome plugin that provides handy ways to inspect and debug your React components.",
            "duration": "4:14",
            "url": "https://egghead.io/lessons/developer-tools"
          }
        ]
      }
    ]
  }
}
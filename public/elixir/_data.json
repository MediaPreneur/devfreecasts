{
  "index": {
    "name": "elixir",
    "subtitle": "Elixir",
    "about": "Elixir is a functional, meta-programming aware language built on top of the Erlang VM. It is a dynamic language that focuses on tooling to leverage Erlang's abilities to build concurrent, distributed and fault-tolerant applications with hot code upgrades.",
    "site": "http://elixir-lang.org",
    "image": "elixir.jpg",
    "partners": [
      {
        "site" : "Elixir sips",
        "site_url": "http://elixirsips.com",
        "image": "elixirsips.jpg",
        "lang": "en",
        "publish": true,
        "videos": [
          {
            "title": "Introduction and Installing Elixir",
            "description": "A quick introduction to the screencast, followed by an Erlang / Elixir installation walkthrough.",
            "duration": "5:46",
            "level": "b",
            "url": "http://elixirsips.com/episodes/001_introduction_and_installing_elixir.html"
          },
          {
            "title": "Dinamo Part 1",
            "description": "The first part to an introduction to building a web application in Elixir using Dynamo.",
            "duration": "7:38",
            "level": "i",
            "url": "http://elixirsips.com/episodes/007_dynamo_part_1.html"
          },
          {
            "title": "Releases with Relex",
            "description": "Making your Elixir application redistributable using Erlang releases.",
            "duration": "4:12",
            "level": "i",
            "url": "http://elixirsips.com/episodes/043_releases_with_relex.html"
          },
          {
            "title": "PCM Audio",
            "description": "Generating PCM Audio and making some noise.",
            "duration": "5:07",
            "level": "a",
            "url": "http://elixirsips.com/episodes/084_pcm_audio.html"
          },
          {
            "title": "Ecto Part 1",
            "description": "An introduction to using Ecto and Postgres for persistence.",
            "duration": "8:45",
            "level": "i",
            "url": "http://elixirsips.com/episodes/024_ecto_part_1.html"
          },
          {
            "title": "Parsing XML",
            "description": "A glimpse into XML parsing in Elixir, by way of interoperating with an Erlang module.",
            "duration": "9:21",
            "level": "i",
            "url": "http://elixirsips.com/episodes/028_parsing_xml.html"
          },
          {
            "title": "Maps Part 1",
            "description": "An introduction to maps, a new feature in Erlang R17 and Elixir 0.13.",
            "duration": "2:51",
            "level": "b",
            "url": "http://elixirsips.com/episodes/054_maps_part_1.html"
          },
          {
            "title": "Maps Part 2",
            "description": "Introducing structs and demonstrating how they can take the place of public Records.",
            "duration": "2:23",
            "level": "b",
            "url": "http://elixirsips.com/episodes/055_maps_part_2.html"
          },
          {
            "title": "Quickie Synth",
            "description": "Using processes, gs, and shelling out to `sox` to build an Elixir-based synthesizer module.",
            "duration": "9:44",
            "level": "i",
            "url": "http://elixirsips.com/episodes/062_quickie_synth.html"
          },
          {
            "title": "EEx",
            "description": "Elixir's built-in templating language, useful for embedding Elixir code inside of a string.",
            "duration": "3:36",
            "level": "i",
            "url": "http://elixirsips.com/episodes/081_eex.html"
          }
        ]
      }
    ]
  }
}
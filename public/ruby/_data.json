{
  "index": {
    "name": "ruby",
    "subtitle": "Ruby",
    "about": "Ruby is a dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write.",
    "site": "https://www.ruby-lang.org",
    "image": "ruby.jpg",
    "category": "languages",
    "videos": [
      {
        "site":"GoRails",
        "site_url":"https://gorails.com/",
        "image":"gorails.jpg",
        "lang":"en",
        "publish":true,
        "title":"The Params Hash",
        "description":"A glimpse into the 'magic' behind the params hash and the various ways it gets populated.",
        "duration":"15:51",
        "level":"i",
        "url":"https://gorails.com/episodes/the-params-hash",
        "published_at":"20150213"
      },
      {
        "site":"GoRails",
        "site_url":"https://gorails.com/",
        "image":"gorails.jpg",
        "lang":"en",
        "publish":true,
        "title":"The Params Hash",
        "description":"A glimpse into the 'magic' behind the params hash and the various ways it gets populated.",
        "duration":"15:51",
        "level":"i",
        "url":"https://gorails.com/episodes/the-params-hash",
        "published_at":"20150213"
      },
      {
        "site":"RubyTapas",
        "site_url":"http://www.rubytapas.com",
        "lang":"en",
        "image":"rubytapas.jpg",
        "publish":true,
        "title":"Caching an API",
        "description":"Web services are slow to request and often have rate caps. A cache can cut down on requests to remote APIs. But how best to design the interface between the code that uses an API, and the caching layer? In this episode we'll explore that question.",
        "duration":"5:05",
        "level":"a",
        "url":"http://www.rubytapas.com/episodes/66-Caching-an-API",
        "published_at":"20150213"
      },
      {
        "site":"RubyTapas",
        "site_url":"http://www.rubytapas.com",
        "lang":"en",
        "image":"rubytapas.jpg",
        "publish":true,
        "title":"Caching an API",
        "description":"Web services are slow to request and often have rate caps. A cache can cut down on requests to remote APIs. But how best to design the interface between the code that uses an API, and the caching layer? In this episode we'll explore that question.",
        "duration":"5:05",
        "level":"a",
        "url":"http://www.rubytapas.com/episodes/66-Caching-an-API",
        "published_at":"20150213"
      },
      {
        "site":"RubyTapas",
        "site_url":"http://www.rubytapas.com",
        "lang":"en",
        "image":"rubytapas.jpg",
        "publish":true,
        "title":"Caching an API",
        "description":"Web services are slow to request and often have rate caps. A cache can cut down on requests to remote APIs. But how best to design the interface between the code that uses an API, and the caching layer? In this episode we'll explore that question.",
        "duration":"5:05",
        "level":"a",
        "url":"http://www.rubytapas.com/episodes/66-Caching-an-API",
        "published_at":"20150213"
      },
      {
        "site":"RubyTapas",
        "site_url":"http://www.rubytapas.com",
        "lang":"en",
        "image":"rubytapas.jpg",
        "publish":true,
        "title":"Caching an API",
        "description":"Web services are slow to request and often have rate caps. A cache can cut down on requests to remote APIs. But how best to design the interface between the code that uses an API, and the caching layer? In this episode we'll explore that question.",
        "duration":"5:05",
        "level":"a",
        "url":"http://www.rubytapas.com/episodes/66-Caching-an-API",
        "published_at":"20150213"
      },
      {
        "site":"RubyTapas",
        "site_url":"http://www.rubytapas.com",
        "lang":"en",
        "image":"rubytapas.jpg",
        "publish":true,
        "title":"Caching an API",
        "description":"Web services are slow to request and often have rate caps. A cache can cut down on requests to remote APIs. But how best to design the interface between the code that uses an API, and the caching layer? In this episode we'll explore that question.",
        "duration":"5:05",
        "level":"a",
        "url":"http://www.rubytapas.com/episodes/66-Caching-an-API",
        "published_at":"20150213"
      },
      {
        "site":"RubyTapas",
        "site_url":"http://www.rubytapas.com",
        "lang":"en",
        "image":"rubytapas.jpg",
        "publish":true,
        "title":"Caching an API",
        "description":"Web services are slow to request and often have rate caps. A cache can cut down on requests to remote APIs. But how best to design the interface between the code that uses an API, and the caching layer? In this episode we'll explore that question.",
        "duration":"5:05",
        "level":"a",
        "url":"http://www.rubytapas.com/episodes/66-Caching-an-API",
        "published_at":"20150213"
      },
      {
        "site":"RubyTapas",
        "site_url":"http://www.rubytapas.com",
        "lang":"en",
        "image":"rubytapas.jpg",
        "publish":true,
        "title":"Caching an API",
        "description":"Web services are slow to request and often have rate caps. A cache can cut down on requests to remote APIs. But how best to design the interface between the code that uses an API, and the caching layer? In this episode we'll explore that question.",
        "duration":"5:05",
        "level":"a",
        "url":"http://www.rubytapas.com/episodes/66-Caching-an-API",
        "published_at":"20150213"
      },
      {
        "site":"RubyTapas",
        "site_url":"http://www.rubytapas.com",
        "lang":"en",
        "image":"rubytapas.jpg",
        "publish":true,
        "title":"Caching an API",
        "description":"Web services are slow to request and often have rate caps. A cache can cut down on requests to remote APIs. But how best to design the interface between the code that uses an API, and the caching layer? In this episode we'll explore that question.",
        "duration":"5:05",
        "level":"a",
        "url":"http://www.rubytapas.com/episodes/66-Caching-an-API",
        "published_at":"20150213"
      },
      {
        "site":"Tuts+",
        "site_url":"http://courses.tutsplus.com/",
        "lang":"en",
        "image":"tutsplus.jpg",
        "publish":true,
        "title":"Ruby MVC from Scratch Rack Basics",
        "description":"In this lesson, we'll get started by figuring out how to make Rack work within our applications. Next, we’ll create a Gem for our framework, and test a blog application that makes use of this Gem.",
        "duration":"11:39",
        "level":"i",
        "url":"http://courses.tutsplus.com/courses/ruby-mvc-framework-from-scratch/lessons/rack-basics",
        "published_at":"20150213"
      },
      {
        "site":"Tuts+",
        "site_url":"http://courses.tutsplus.com/",
        "lang":"en",
        "image":"tutsplus.jpg",
        "publish":true,
        "title":"Ruby MVC from Scratch Rack Basics",
        "description":"In this lesson, we'll get started by figuring out how to make Rack work within our applications. Next, we’ll create a Gem for our framework, and test a blog application that makes use of this Gem.",
        "duration":"11:39",
        "level":"i",
        "url":"http://courses.tutsplus.com/courses/ruby-mvc-framework-from-scratch/lessons/rack-basics",
        "published_at":"20150213"
      },
      {
        "site":"Tuts+",
        "site_url":"http://courses.tutsplus.com/",
        "lang":"en",
        "image":"tutsplus.jpg",
        "publish":true,
        "title":"Ruby MVC from Scratch Rack Basics",
        "description":"In this lesson, we'll get started by figuring out how to make Rack work within our applications. Next, we’ll create a Gem for our framework, and test a blog application that makes use of this Gem.",
        "duration":"11:39",
        "level":"i",
        "url":"http://courses.tutsplus.com/courses/ruby-mvc-framework-from-scratch/lessons/rack-basics",
        "published_at":"20150213"
      },
      {
        "site":"Tuts+",
        "site_url":"http://courses.tutsplus.com/",
        "lang":"en",
        "image":"tutsplus.jpg",
        "publish":true,
        "title":"Ruby MVC from Scratch Rack Basics",
        "description":"In this lesson, we'll get started by figuring out how to make Rack work within our applications. Next, we’ll create a Gem for our framework, and test a blog application that makes use of this Gem.",
        "duration":"11:39",
        "level":"i",
        "url":"http://courses.tutsplus.com/courses/ruby-mvc-framework-from-scratch/lessons/rack-basics",
        "published_at":"20150213"
      }
    ]
  }
}
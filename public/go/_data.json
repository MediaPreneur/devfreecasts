{
  "index": {
    "name": "go",
    "subtitle": "Go",
    "about": "Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.",
    "site": "http://golang.org",
    "image": "go.jpg",
    "category": "languages",
    "partners": [
      {
        "site": "The Go Programming Language",
        "site_url": "https://www.youtube.com/user/gocoding",
        "image": "golang.jpg",
        "lang": "en",
        "publish": true,
        "videos": [
          {
            "title": "Underscore library for Go",
            "description": "Toby presents his controversial Underscore library at golang-syd in July 2014.",
            "duration": "10:42",
            "level": "b",
            "url": "https://www.youtube.com/watch?v=juHMdcTz5vM"
          },
          {
            "title": "Writing, building, installing and testing Go code",
            "description": "This screencast describes setting up a workspace (GOPATH), writing commands and packages, using the go tool to build and install, and using the testing package to write unit tests.",
            "duration": "5:03",
            "level": "b",
            "url": "https://www.youtube.com/watch?v=XCsL89YtqCs"
          },
          {
            "title": "Testing Techniques",
            "description": "This talk was initially presented by Andrew Gerrand at Google I/O 2014 at the Go Developer Sandbox.",
            "duration": "50:16",
            "level": "i",
            "url": "https://www.youtube.com/watch?v=ndmB0bj7eyw"
          },
          {
            "title": "Writing your own Go compiler",
            "description": "In this video, it'll be explaining the Go potential as a very portable language and reviewing the Go tools that make that such an exciting possibility to write a Go compiler.",
            "duration": "32:21",
            "level": "a",
            "url": "https://www.youtube.com/watch?v=Qe8Dq7V3hXY"
          }
        ]
      },
      {
        "site": "Gocasts",
        "site_url": "https://gocasts.io/",
        "image": "go.jpg",
        "lang": "en",
        "publish": true,
        "videos": [
          {
            "title": "Using Go for a simple HTTP Request",
            "description": "How to do a simple HTTP Request using the net/http package in the Go standard library.",
            "duration": "2:30",
            "level": "b",
            "url": "https://gocasts.io/gocasts/simple-http-get"
          },
          {
            "title": "Using Go to fetch and parse JSON",
            "description": "Using Go to fetch JSON from a webservice, and then parse it.",
            "duration": "6:04",
            "level": "i",
            "url": "https://gocasts.io/gocasts/json-parsing"
          },
          {
            "title": "Concurrency with buffered channels",
            "description": "Using Channels with Go for communicating with different parts of a concurrent app, and how a buffered channel provides a blocking feature.",
            "duration": "3:17",
            "level": "a",
            "url": "https://gocasts.io/gocasts/buffered-channels"
          },
          {
            "title": "Watching multiple channels",
            "description": "How to wait for multiple channels with Go.",
            "duration": "3:26",
            "level": "a",
            "url": "https://gocasts.io/gocasts/watching-multiple-channels"
          }
        ]
      },
      {
        "site": "Russ Cox",
        "site_url": "https://www.youtube.com/user/rscgolang/videos",
        "image": "russcox.jpg",
        "lang": "en",
        "publish": true,
        "videos": [
          {
            "title": "A Tour of Go",
            "description": "Three things that make Go fast, fun, and productive for me: interfaces, reflection, and concurrency. Builds a toy web crawler to demonstrate these.",
            "duration": "34:40",
            "level": "b",
            "url": "https://www.youtube.com/watch?v=ytEkHepK08c"
          }
        ]
      },
      {
        "site" : "GopherCasts",
        "site_url": "https://gophercasts.io",
        "image": "gophercasts.jpg",
        "lang": "en",
        "publish": true,
        "videos": [
          {
            "title": "Deploying Web Apps to Heroku",
            "description": "Nate covers deploying web apps to Heroku using the heroku CLI and git.",
            "duration": "6:00",
            "level": "i",
            "url": "https://gophercasts.io/lessons/10-deploying-web-apps-to-heroku"
          },
          {
            "title": "Getting Started with Go",
            "description": "How to setup your environment and write a Hello World application using the Go programming language.",
            "duration": "3:14",
            "level": "b",
            "url": "https://gophercasts.io/lessons/1-getting-started-with-go"
          },
          {
            "title": "Go Language Basics",
            "description": "In this episode Jeremy covers the basics of variables, functions and loops in Go.",
            "duration": "5:49",
            "level": "b",
            "url": "https://gophercasts.io/lessons/2-go-language-basics"
          },
          {
            "title": "Martini and Markdown",
            "description": "In this episode Jeremy builds a simple Martini web application that parses and presents Markdown.",
            "duration": "5:23",
            "level": "i",
            "url": "https://gophercasts.io/lessons/3-martini-and-markdown"
          },
          {
            "title": "Postgres: Basics",
            "description": "In this episode Jeremy covers how to setup and connect to a Postgres database with Go.",
            "duration": "6:23",
            "level": "i",
            "url": "https://gophercasts.io/lessons/4-postgres-basics"
          },
          {
            "title": "HTML Templates",
            "description": "Jeremy makes his books output prettier by using Bootstrap and HTML Templates.",
            "duration": "4:18",
            "level": "i",
            "url": "https://gophercasts.io/lessons/5-html-templates"
          },
          {
            "title": "Postgres: Inserting Data",
            "description": "Jeremy continues with his Martini web application and adds the ability to insert book data into the database.",
            "duration": "3:34",
            "level": "i",
            "url": "https://gophercasts.io/lessons/6-postgres-inserting-data"
          },
          {
            "title": "Auth: Part 1",
            "description": "Jeremy covers basic authentication with Martini.",
            "duration": "4:35",
            "level": "a",
            "url": "https://gophercasts.io/lessons/7-auth-part-1"
          },
          {
            "title": "Auth: Part 2",
            "description": "Jeremy covers basic authentication with Martini.",
            "duration": "4:49",
            "level": "a",
            "url": "https://gophercasts.io/lessons/8-auth-part-2"
          },
          {
            "title": "Auth: Part 3",
            "description": "Jeremy covers basic authentication with Martini.",
            "duration": "5:28",
            "level": "a",
            "url": "https://gophercasts.io/lessons/9-auth-part-3"
          }
        ]
      }
    ]
  }
}

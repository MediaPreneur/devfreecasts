{
  "index": {
    "name": "javascript",
    "subtitle": "JavaScript",
    "about": "JavaScript is a lightweight, interpreted, object-oriented language with first-class functions, most known as the scripting language for Web pages, but used in many non-browser environments as well such as Node.js or Apache CouchDB. It is a prototype-based, multi-paradigm scripting language that is dynamic, and supports object-oriented, imperative, and functional programming styles.",
    "site": "https://developer.mozilla.org/en/docs/Web/JavaScript",
    "image": "javascript.jpg",
    "category": "languages",
    "videos": [
      {
        "site":"Nodevember",
        "site_url":"http://nodevember.org/",
        "image":"nodevember.jpg",
        "lang":"en",
        "publish":true,
        "title":"Building Large Scalable Realtime Applications with Meteor",
        "description":"In this talk Tyson Cadenhead will explaing some tips and tricks to create and maintain a large scalable meteor app.",
        "duration":"2:19:45",
        "level":"b",
        "url":"http://coderstv.com/video/gabrielhpugliese/LQGRvwAp9tKYTqzZC",
        "published_at":"20150213"
      },
      {
        "site":"Nodevember",
        "site_url":"http://nodevember.org/",
        "image":"nodevember.jpg",
        "lang":"en",
        "publish":true,
        "title":"Building Large Scalable Realtime Applications with Meteor",
        "description":"In this talk Tyson Cadenhead will explaing some tips and tricks to create and maintain a large scalable meteor app.",
        "duration":"2:19:45",
        "level":"b",
        "url":"http://coderstv.com/video/gabrielhpugliese/LQGRvwAp9tKYTqzZC",
        "published_at":"20150213"
      },
      {
        "site":"TagTree",
        "site_url":"http://tagtree.tv",
        "image":"tagtree.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Generators",
        "description":"Generators! In this episode we introduce you to working lazily with complex array calculations with generators.",
        "duration":"7:40",
        "level":"a",
        "url":"http://tagtree.tv/ecmascript-6-episode-4",
        "published_at":"20150213"
      },
      {
        "site":"egghead",
        "site_url":"https://egghead.io",
        "image":"egghead.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Generators",
        "description":"Generators in ECMAscript 6 are first-class coroutines that produce encapsulated suspended execution contexts. Whew! Yield values and iterate over them until no more values exist in the generator. We'll talk more about practical use later.",
        "duration":"5:28",
        "level":"a",
        "url":"https://egghead.io/lessons/ecmascript-6-generators",
        "published_at":"20150213"
      },
      {
        "site":"egghead",
        "site_url":"https://egghead.io",
        "image":"egghead.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Generators",
        "description":"Generators in ECMAscript 6 are first-class coroutines that produce encapsulated suspended execution contexts. Whew! Yield values and iterate over them until no more values exist in the generator. We'll talk more about practical use later.",
        "duration":"5:28",
        "level":"a",
        "url":"https://egghead.io/lessons/ecmascript-6-generators",
        "published_at":"20150213"
      },
      {
        "site":"egghead",
        "site_url":"https://egghead.io",
        "image":"egghead.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Generators",
        "description":"Generators in ECMAscript 6 are first-class coroutines that produce encapsulated suspended execution contexts. Whew! Yield values and iterate over them until no more values exist in the generator. We'll talk more about practical use later.",
        "duration":"5:28",
        "level":"a",
        "url":"https://egghead.io/lessons/ecmascript-6-generators",
        "published_at":"20150213"
      },
      {
        "site":"egghead",
        "site_url":"https://egghead.io",
        "image":"egghead.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Generators",
        "description":"Generators in ECMAscript 6 are first-class coroutines that produce encapsulated suspended execution contexts. Whew! Yield values and iterate over them until no more values exist in the generator. We'll talk more about practical use later.",
        "duration":"5:28",
        "level":"a",
        "url":"https://egghead.io/lessons/ecmascript-6-generators",
        "published_at":"20150213"
      },
      {
        "site":"egghead",
        "site_url":"https://egghead.io",
        "image":"egghead.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Generators",
        "description":"Generators in ECMAscript 6 are first-class coroutines that produce encapsulated suspended execution contexts. Whew! Yield values and iterate over them until no more values exist in the generator. We'll talk more about practical use later.",
        "duration":"5:28",
        "level":"a",
        "url":"https://egghead.io/lessons/ecmascript-6-generators",
        "published_at":"20150213"
      },
      {
        "site":"egghead",
        "site_url":"https://egghead.io",
        "image":"egghead.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Generators",
        "description":"Generators in ECMAscript 6 are first-class coroutines that produce encapsulated suspended execution contexts. Whew! Yield values and iterate over them until no more values exist in the generator. We'll talk more about practical use later.",
        "duration":"5:28",
        "level":"a",
        "url":"https://egghead.io/lessons/ecmascript-6-generators",
        "published_at":"20150213"
      },
      {
        "site":"egghead",
        "site_url":"https://egghead.io",
        "image":"egghead.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Generators",
        "description":"Generators in ECMAscript 6 are first-class coroutines that produce encapsulated suspended execution contexts. Whew! Yield values and iterate over them until no more values exist in the generator. We'll talk more about practical use later.",
        "duration":"5:28",
        "level":"a",
        "url":"https://egghead.io/lessons/ecmascript-6-generators",
        "published_at":"20150213"
      },
      {
        "site":"Tuts+",
        "site_url":"http://courses.tutsplus.com/",
        "lang":"en",
        "image":"tutsplus.jpg",
        "publish":true,
        "title":"Picking the ECMAScript 6 environment",
        "description":"Because ES6 is not finalized, we will not find an environment that implements 100% of the specification. There are two environments we'll use: Google Traceur and Firefox Nightly",
        "duration":"6:26",
        "level":"b",
        "url":"http://courses.tutsplus.com/courses/whats-coming-to-javascript/lessons/picking-the-ecmascript-6-environments",
        "published_at":"20150213"
      },
      {
        "site":"Tuts+",
        "site_url":"http://courses.tutsplus.com/",
        "lang":"en",
        "image":"tutsplus.jpg",
        "publish":true,
        "title":"Picking the ECMAScript 6 environment",
        "description":"Because ES6 is not finalized, we will not find an environment that implements 100% of the specification. There are two environments we'll use: Google Traceur and Firefox Nightly",
        "duration":"6:26",
        "level":"b",
        "url":"http://courses.tutsplus.com/courses/whats-coming-to-javascript/lessons/picking-the-ecmascript-6-environments",
        "published_at":"20150213"
      },
      {
        "site":"Watchmecode",
        "site_url":"https://sub.watchmecode.net",
        "image":"watchmecode.jpg",
        "lang":"en",
        "publish":true,
        "title":"The Jasmine Standalone Runner",
        "description":"In this episode I will show you the basics of how to install and use the standalone version of the Jasmine testing framework, to write unit tests for your JavaScript applications.",
        "duration":"17:12",
        "level":"i",
        "url":"https://sub.watchmecode.net/jasmine-standalone/",
        "published_at":"20150213"
      },
      {
        "site":"Watchmecode",
        "site_url":"https://sub.watchmecode.net",
        "image":"watchmecode.jpg",
        "lang":"en",
        "publish":true,
        "title":"The Jasmine Standalone Runner",
        "description":"In this episode I will show you the basics of how to install and use the standalone version of the Jasmine testing framework, to write unit tests for your JavaScript applications.",
        "duration":"17:12",
        "level":"i",
        "url":"https://sub.watchmecode.net/jasmine-standalone/",
        "published_at":"20150213"
      },
      {
        "site":"Watchmecode",
        "site_url":"https://sub.watchmecode.net",
        "image":"watchmecode.jpg",
        "lang":"en",
        "publish":true,
        "title":"The Jasmine Standalone Runner",
        "description":"In this episode I will show you the basics of how to install and use the standalone version of the Jasmine testing framework, to write unit tests for your JavaScript applications.",
        "duration":"17:12",
        "level":"i",
        "url":"https://sub.watchmecode.net/jasmine-standalone/",
        "published_at":"20150213"
      },
      {
        "site":"Ode to Code",
        "site_url":"http://odetocode.com",
        "image":"odetocode.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Spread",
        "description":"The spread is syntactic sugar we can use to spread an array across function parameters, or into an array literal.",
        "duration":"3:12",
        "level":"i",
        "url":"http://odetocode.com/videos/play/es6-spread-parameters",
        "published_at":"20150213"
      },
      {
        "site":"Ode to Code",
        "site_url":"http://odetocode.com",
        "image":"odetocode.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Spread",
        "description":"The spread is syntactic sugar we can use to spread an array across function parameters, or into an array literal.",
        "duration":"3:12",
        "level":"i",
        "url":"http://odetocode.com/videos/play/es6-spread-parameters",
        "published_at":"20150213"
      },
      {
        "site":"Ode to Code",
        "site_url":"http://odetocode.com",
        "image":"odetocode.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Spread",
        "description":"The spread is syntactic sugar we can use to spread an array across function parameters, or into an array literal.",
        "duration":"3:12",
        "level":"i",
        "url":"http://odetocode.com/videos/play/es6-spread-parameters",
        "published_at":"20150213"
      },
      {
        "site":"Ode to Code",
        "site_url":"http://odetocode.com",
        "image":"odetocode.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Spread",
        "description":"The spread is syntactic sugar we can use to spread an array across function parameters, or into an array literal.",
        "duration":"3:12",
        "level":"i",
        "url":"http://odetocode.com/videos/play/es6-spread-parameters",
        "published_at":"20150213"
      },
      {
        "site":"Ode to Code",
        "site_url":"http://odetocode.com",
        "image":"odetocode.jpg",
        "lang":"en",
        "publish":true,
        "title":"ES6 Spread",
        "description":"The spread is syntactic sugar we can use to spread an array across function parameters, or into an array literal.",
        "duration":"3:12",
        "level":"i",
        "url":"http://odetocode.com/videos/play/es6-spread-parameters",
        "published_at":"20150213"
      }
    ]
  }
}